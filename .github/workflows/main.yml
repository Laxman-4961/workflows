name: Import Postman Collection

on:
  push:
    branches:
      - main

jobs:
  import_collection:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3

    - name: Install jq
      run: sudo apt-get update && sudo apt-get install -y jq

    - name: Import Collection to Postman (Create New)
      env:
        POSTMAN_API_KEY: ${{ secrets.POSTMAN_API_KEY }}
        COLLECTION_FILE: API/DocuSeal.json

      run: |
        WRAPPED_FILE=$(mktemp)
        jq -n --argjson collection "$(cat "$COLLECTION_FILE")" '{collection: $collection}' > "$WRAPPED_FILE"

        echo "Sending collection to Postman..."
        response=$(curl --location --request POST "https://api.getpostman.com/collections" \
          --header "X-Api-Key: $POSTMAN_API_KEY" \
          --header "Content-Type: application/json" \
          --data @"$WRAPPED_FILE")

        echo "Response: $response"
        COLLECTION_ID=$(echo "$response" | jq -r '.collection.id')

        if [ -z "$COLLECTION_ID" ] || [ "$COLLECTION_ID" == "null" ]; then
          echo "❌ Failed to import collection. Full response:"
          echo "$response"
          exit 1
        fi

        echo "✅ Successfully imported collection. id: $COLLECTION_ID"
        echo "COLLECTION_ID=$COLLECTION_ID" >> $GITHUB_ENV
        - name: Fetch OpenAPI 3.x JSON from Postman
        id: fetch_openapi
        run: |
          echo "Fetching OpenAPI JSON for collection $COLLECTION_ID"
          curl --silent --location --request GET "https://api.getpostman.com/collections/$COLLECTION_ID/transformations" \
            --header "Content-Type: application/json" \
            --header "x-api-key: $APIKEY" \
            | jq -r '.output' > postman-openapi-$COLLECTION_ID.json
