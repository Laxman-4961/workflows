name: Postman Collection to APIC Import

on:
  workflow_dispatch:
    inputs:
      collection_id:
        description: 'Postman Collection ID'
        required: true
        type: string

jobs:
  convert-postman:
    runs-on: ubuntu-latest
    env:
      APIKEY: ${{ secrets.POSTMAN_APIKEY }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Run conversion script
        id: convert
        shell: bash
        run: |
          COLLECTIONID="${{ github.event.inputs.collection_id }}"
          
          if [ -z "$APIKEY" ] || [ "$APIKEY" == "FILL-ME-IN-WITH-YOUR-POSTMAN-APIKEY" ]; then
            echo "ERROR: Please set your POSTMAN APIKEY as a secret named POSTMAN_APIKEY."
            exit 1
          fi

          if [ -z "$COLLECTIONID" ]; then
            echo "ERROR: Collection ID must be provided as input."
            exit 1
          fi

          echo "Fetching OpenAPI 3.x document for Postman Collection $COLLECTIONID"
          curl --location --request GET "https://api.getpostman.com/collections/${COLLECTIONID}/transformations" \
            --header "Content-Type: application/json" \
            --header "x-api-key: $APIKEY" | jq -r '.output' > postman-openapi-$COLLECTIONID.json

          sleep 2

          echo "Generating 'apic-friendly-secure.json' with Stub Security Scheme Definition"
          jq -r '. += {"components":{"securitySchemes":{"SecSchemeStub":{"type":"apiKey","x-key-type":"client_id","name":"X-IBM-Client-Id","in":"header"}}},"security":[{"SecSchemeStub":[]}]}' postman-openapi-$COLLECTIONID.json > apic-friendly-secure.json

          sleep 2

          echo "Reading Server URL field ..."
          URL=$(jq -r '.servers[0].url' apic-friendly-secure.json)
          echo "Discovered Server URL field $URL ..."

          sleep 2

          echo "Populating target-url property and updating invoke definition ..."
          jq --arg URL "$URL" '. += {
            "x-ibm-configuration": {
              "assembly": {
                "execute": [{
                  "invoke": {
                    "version": "2.0.0",
                    "title": "invoke",
                    "target-url": "$(target-url)$(request.path)"
                  }
                }]
              },
              "properties": {
                "target-url": {
                  "value": $URL,
                  "description": "The URL of the target service",
                  "encoded": false
                }
              }
            }
          }' apic-friendly-secure.json > apic-friendly-secure-import.json

          sleep 2

          echo "Replacing Server URL entry with forward slash to ensure proper URL construction"
          tmp=$(mktemp)
          jq '.servers = [{"url": "/"}]' apic-friendly-secure-import.json > "$tmp" && mv "$tmp" apic-friendly-secure-import.json

          echo ""
          echo "Generated files:"
          echo " postman-openapi-$COLLECTIONID.json"
          echo " apic-friendly-secure.json"
          echo " apic-friendly-secure-import.json"
          echo ""
          echo "DONE!"

      - name: Upload generated JSON files
        uses: actions/upload-artifact@v3
        with:
          name: converted-postman-files
          path: |
            postman-openapi-${{ github.event.inputs.collection_id }}.json
            apic-friendly-secure.json
            apic-friendly-secure-import.json
